import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import firebase from "firebase/app";
import "firebase/auth";
import { FIREBASE_CONFIG } from '../config';
import { useEffect, useState } from 'react';
if (!firebase.apps.length) {
  firebase.initializeApp(FIREBASE_CONFIG);
}
export default function Home() {
  const [user, setUser] = useState(null as firebase.User | null);

  useEffect(() => {
    const authListener = firebase.auth().onAuthStateChanged(async (signInUser: firebase.User | null) => {
      setUser(signInUser);
      console.log("signInUser", signInUser)
    });
    return authListener;
  }, [])

  const signInWithGoogle = async () => {
    try {
      let provider = new firebase.auth.GoogleAuthProvider();
      await firebase.auth().signInWithPopup(provider);
    } catch (err) {
      console.log("signInWithGoogle error", err)
    }
  }

  const signInWithFacebook = async () => {
    try {
      let provider = new firebase.auth.FacebookAuthProvider();
      await firebase.auth().signInWithPopup(provider);
    } catch (err) {
      console.log("signInWithFacebook error", err)
    }
  }

  const changePassword = async () => {
    try {
      await user?.updatePassword('123456');
    } catch (err) {
      console.log("Change pwd error", err)
    }
  }

  const changeEmail = async () => {
    try {
      // firebase.auth().currentUser?.reauthe
      firebase.auth().currentUser?.reauthenticateWithRedirect(new firebase.auth.GoogleAuthProvider())
        .then(function (userCredential) {
          // You can now delete the user:
          // return firebase.auth().currentUser.delete();
          user?.updateEmail('phuocht.ashkhaskghaksjhgkashgl.agasjgf@gmail.com');
        }).catch(function (error) {
          // Credential mismatch or some other error.
        });

    } catch (err) {
      console.log("Change email error", err)
    }
  }

  const signOut = async () => {
    try {
      await firebase.auth().signOut();
    } catch (err) {
      console.log("signOut error", err)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h3>Hello {user?.displayName} {user?.email}</h3>
      </main>
      <button
        onClick={() => signInWithGoogle()}
      >
        SignIn With Google
      </button>
      <button
        onClick={() => signInWithFacebook()}
      >
        SignIn With Facebook
      </button>
      <button
        onClick={() => changeEmail()}
      >
        Change Email
      </button>
      <button
        onClick={() => changePassword()}
      >
        Change Password
      </button>
      <button
        onClick={() => signOut()}
      >
        Sign out
      </button>
      <footer className={styles.footer}>
        <a
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
